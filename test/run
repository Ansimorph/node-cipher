# link locally so that `npm run` works correctly
npm link ../node-cipher

# Test CLI
nodecipher -h
nodecipher -v
nodecipher -l
nodecipher encrypt -h
nodecipher decrypt -h


# encrypt using the password `test1` and the default algorithm
nodecipher encrypt -i test/config.json -o test/config.json.cast5 -p test1

# decrypt using the password `test1` and the default algorithm
nodecipher decrypt -i test/config.json.cast5 -o test/config.copy.json -p test1

# diff the two files, and exit with its length
comm -3 test/config.json test/config.copy.json | wc -c | exit


# encrypt using the password `test2` and the `aes-128-cbc` algorithm
nodecipher encrypt -i test/config.json -o test/config.json.cast5 -p test2 -a aes-128-cbc

# decrypt using the password `test2` and the `aes-128-cbc` algorithm
nodecipher decrypt -i test/config.json.cast5 -o test/config.copy.json -p test2 -a aes-128-cbc

# diff the two files, and exit with its length
comm -3 test/config.json test/config.copy.json | wc -c | exit


# encrypt using the password `test3` (prompted) and the default algorithm
echo test3 | nodecipher encrypt -i test/config.json -o test/config.json.cast5

# decrypt using the password `test3` (prompted) and the default algorithm
echo test3 | nodecipher decrypt -i test/config.json.cast5 -o test/config.copy.json

# diff the two files, and exit with its length
comm -3 test/config.json test/config.copy.json | wc -c | exit


# encrypt using the password `test4` (prompted) and the `aes-128-cbc` algorithm
echo test4 | nodecipher encrypt -i test/config.json -o test/config.json.cast5 -a aes-128-cbc

# decrypt using the password `test4` (prompted) and the `aes-128-cbc` algorithm
echo test4 | nodecipher decrypt -i test/config.json.cast5 -o test/config.copy.json -a aes-128-cbc

# diff the two files, and exit with its length
comm -3 test/config.json test/config.copy.json | wc -c | exit
